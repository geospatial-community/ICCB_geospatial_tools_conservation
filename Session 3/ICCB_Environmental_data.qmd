---
title: "ICCB Environmental data download"
author: "Scott Forrest and Charlotte Patterson"
date: "`r Sys.Date()`"
execute: 
  cache: false
# bibliography: references.bib
toc: true
number-sections: false
format: 
  html:
    self-contained: true
    code-fold: show
    code-tools: true
    df-print: paged
    code-line-numbers: true
    code-overflow: scroll
    fig-format: png
    fig-dpi: 300
  pdf:
    geometry: 
      - top=30mm
      - left=30mm
editor:
  source
abstract: |
  In this script we are downloading current and future environmental data (as rasters) to use in species distribution models (SDMs) for koalas (Phascolarctos cinereus) in the South-East Queensland (SEQ) region. 
---

## Import packages

```{r}
#| warning: false
#| message: false

library(terra)
library(dplyr)
library(sf)
library(ggplot2)

```

## Load South East Queensland (SEQ) boundary

We start by defining our study area, which is the South East Queensland (SEQ) region. We will use the Local Government Areas (LGA) shapefile to define the extent of SEQ.

https://qldspatial.information.qld.gov.au/catalogue/custom/detail.page?fid={3F3DBD69-647B-4833-B0A5-CC43D5E70699}

```{r}

# Load the study area shapefile
LGA <- st_read("Data/Environmental_variables/Local_Government_Areas.shp")

# Check the coordinate reference system (CRS)
st_crs(LGA)

# Convert to WGS84
LGA <- LGA %>% st_transform(7856)

# Select local govt. areas for South East Queensland
LGA_SEQ <- LGA %>% 
  filter(lga %in% c("Brisbane City", 
                    "Moreton Bay City", 
                    "Logan City", 
                    "Ipswich City", 
                    "Redland City", 
                    "Scenic Rim Regional", 
                    "Somerset Regional", 
                    "Lockyer Valley Regional", 
                    "Gold Coast City", 
                    "Sunshine Coast Regional", 
                    "Toowoomba Regional", 
                    "Noosa Shire"))

ggplot() +
  geom_sf(data = LGA, color = "black") +
  geom_sf(data = LGA_SEQ, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(title = "Local Government Areas Queensland (SEQ in purple)")
  

ggplot() +
  geom_sf(data = LGA_SEQ, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(title = "Local Government Areas South East Queensland (SEQ)")

```

## Merge into a single polygon

```{r}

# Merge the SEQ LGAs into one polygon
SEQ_extent <- st_union(LGA_SEQ)

ggplot() +
  geom_sf(data = SEQ_extent, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  ggtitle("South-East Queensland Spatial Extent") + 
  theme_bw() 

```

## Save SEQ extent for other scripts

```{r}

# Convert our SEQ extent to a SpatExtent object by converting to a SpatVector
SEQ_extent.vect <- terra::vect(SEQ_extent)

# Write the SEQ extent to a shapefile
writeVector(SEQ_extent.vect, "Data/Environmental_variables/SEQ_extent.shp", overwrite = T)

```

## Load current environmental data

Layers were made available to us by the EcoCommons team and were created by Toombs and Ma (2025):

Toombs, N., and Ma S., 2025, A High-Resolution Dataset of 19 Bioclimatic Indices over Australia, Climate Projections and Services â€“ Queensland Treasury, Brisbane, Queensland. [https://longpaddock.qld.gov.au/qld-future-climate/data-info/tern/]

```{r}

files <- list.files("Data/Environmental_variables/Current_climate_QLD", 
             pattern = ".tif$", 
             full.names = TRUE)

# Load all bioclim rasters
current_bioclim <- lapply(files, terra::rast) 

# Make into one raster stack
current_bioclim <- rast(current_bioclim)

# Plot the current bioclimatic variables
plot(current_bioclim)

# Examine the resolution
current_bioclim

# Check the CRS
crs(current_bioclim)

# Update CRS to EPSG:7856 (GDA2020 / MGA zone 56)
current_bioclim <- terra::project(current_bioclim, "EPSG:7856")

# Our resolution is now ~5km by 5km
current_bioclim

```

## Mask and crop to SEQ extent

```{r}

# Mask the current bioclimatic variables to the SEQ extent
current_bioclim <- terra::mask(current_bioclim, SEQ_extent.vect)

# Crop to the SEQ region
current_bioclim <- terra::crop(current_bioclim, SEQ_extent.vect)

# Plot all current bioclimatic variables
plot(current_bioclim)

# Save the current environmental covariates
writeRaster(current_bioclim,
            filename = "Data/Environmental_variables/SEQ_current_bioclim.tif",
            overwrite = T)

```

## Load future environmental data

Here we load outputs from a moderate-high emissions shared socio-economic path scenario (SSP 3.70) for the year 2090 (2080 - 2099).

```{r}

files <- list.files("Data/Environmental_variables/Future_climate_SSP370_2090", 
             pattern = ".tif$", 
             full.names = TRUE)

# Load all bioclim rasters
future_bioclim <- lapply(files, terra::rast) 

# Make into one raster stack
future_bioclim <- rast(future_bioclim)

# Plot the future bioclimatic variables
plot(future_bioclim)

# Examine the resolution
future_bioclim

# Check the CRS
crs(future_bioclim)

# Update CRS 
future_bioclim <- terra::project(future_bioclim, "EPSG:7856")

# Our resolution is now ~5km by 5km
future_bioclim

```

## Mask to SEQ extent

We can see that for these layers the water surrounding Australia is not NA, but are values of 0. In some cells this introduces an artifact on the coastline where the values in some cells are an average between realistic values and 0, which results in cells with unusual and unrealistic values. We will do our best to mask these out.

```{r}

# First mask and crop by the SEQ extent
future_bioclim <- terra::mask(future_bioclim, SEQ_extent.vect) 
future_bioclim <- terra::crop(future_bioclim, SEQ_extent.vect)

# Plot one of the variables - max temp of the warmest month
plot(future_bioclim[[5]], main = "Future BIO5")

```

We can clearly see the artifacts in BIO5, which are not present in the current layers.

```{r}

plot(current_bioclim[[5]], main = "Current BIO5")

```

If we plot a histogram of the values we can see where we can set a threshold to exclude those lower values on the coastline. We tested values to ensure that we were removing as many of the dodgy values at the coast whilst retaining all real values, and the best balance was 28 degrees.

Unfortunately now we have slightly fewer cells on the coastline, but as these were artifacts we don't have the true data for those cells anyway.

```{r}

# plot the distribution of values in BIO5
hist(future_bioclim[[5]], breaks = 100)

# create a mask for the artifacts, which we will apply across all of the layers
artifact_mask <- future_bioclim[[5]] > 28
names(artifact_mask) <- "artifact_mask"

# plot the artifact mask
plot(artifact_mask)

# plot the updated future BIO5 layer
plot(future_bioclim[[5]], main = "Future BIO5 - unmasked")

# set all artifact values to NA (across all layers)
future_bioclim <- terra::mask(future_bioclim, artifact_mask, maskvalues = 0) # Set all values of 0 to NA

# plot the updated future BIO5 layer
plot(future_bioclim[[5]], main = "Future BIO5 - masked")
plot(current_bioclim[[5]], main = "Current BIO5")

# this removes those lower values
hist(future_bioclim[[5]], breaks = 100)

```

We can see there are a couple raster cells that have artifacts, but we can filter by the difference between the current and future layers to remove these. Unfortunately, temperature is only going to increase, so we can filter by values where the difference is negative for the BIOCLIM 5 layer, which is the max temperature of the warmest month.

```{r}

# have a look at the difference between current and future
plot(future_bioclim[[5]] - current_bioclim[[5]])

min(values(future_bioclim[[5]] - current_bioclim[[5]]), na.rm = TRUE)

# save that and create a mask for the artifact cells
temp_diff <- future_bioclim[[5]] - current_bioclim[[5]]
temp_diff_mask <- temp_diff > 1 # there is one remaining artifact cell that's about 0.7, so we'll remove that

# have a look at the mask
plot(temp_diff_mask)

# these values look much better without the artifacts
plot(mask(future_bioclim[[5]], temp_diff_mask, maskvalues = 0), main = "Future BIO5 - masked by difference")

# we'll apply that mask to all layers
future_bioclim <- mask(future_bioclim, temp_diff_mask, maskvalues = 0)

```

Now that we have applied the artifact mask across all layers, they look better.

```{r}

plot(future_bioclim)

```

Now we can save the future environmental covariates for SEQ.

```{r}

# Save the cropped and masked future environmental covariates
writeRaster(future_bioclim,
            filename = "Data/Environmental_variables/SEQ_future_bioclim.2090.SSP370.tif",
            overwrite = T)

```

## Load future environmental data 2

Here we load outputs from a low emissions shared socio-economic path scenario (SSP 1.26) for the year 2090 (2080 - 2099).

```{r}

files <- list.files("Data/Environmental_variables/Future_climate_SSP126_2090", 
             pattern = ".tif$", 
             full.names = TRUE)

# Load all bioclim rasters
future_bioclim <- lapply(files, terra::rast) 

# Make into one raster stack
future_bioclim <- rast(future_bioclim)

plot(future_bioclim)

# Examine the resolution
future_bioclim

# Check the CRS
crs(future_bioclim)

# Update CRS 
future_bioclim <- terra::project(future_bioclim, "EPSG:7856")

# Our resolution is now ~5km by 5km
future_bioclim

```

## Mask to SEQ extent

We will crop and mask the future bioclimatic variables to the SEQ extent, and apply the artifact mask as we did for the SSP 3.70 layers.

```{r}

# First mask and crop by the SEQ extent
future_bioclim <- terra::mask(future_bioclim, SEQ_extent.vect) 
future_bioclim <- terra::crop(future_bioclim, SEQ_extent.vect)

# set all artifact values to NA
future_bioclim <- terra::mask(future_bioclim, artifact_mask, maskvalues = 0) # Set all values of 0 to NA
future_bioclim <- terra::mask(future_bioclim, temp_diff_mask, maskvalues = 0) # also use the temp difference mask
plot(future_bioclim[[5]])

plot(future_bioclim)

# Save the future environmental covariates
writeRaster(future_bioclim,
            filename = "Data/Environmental_variables/SEQ_future_bioclim.2090.SSP126.tif",
            overwrite = T)

```

