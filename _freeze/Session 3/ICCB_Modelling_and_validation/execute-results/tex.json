{
  "hash": "694a415e73422e07c2bf48d61c835cdb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ICCB Species distribution modelling and validation\"\nauthor: \"Scott Forrest and Charlotte Patterson\"\ndate: \"2025-06-06\"\nexecute: \n  cache: false\n# bibliography: references.bib\ntoc: true\nnumber-sections: false\nformat: \n  html:\n    self-contained: true\n    code-fold: show\n    code-tools: true\n    df-print: paged\n    code-line-numbers: true\n    code-overflow: scroll\n    fig-format: png\n    fig-dpi: 300\n  pdf:\n    geometry: \n      - top=30mm\n      - left=30mm\neditor:\n  source\nabstract: |\n  In this script we are fitting species distribution models to the data of koalas (Phascolarctos cinereus) in the South-East Queensland (SEQ) region under current environmental conditions, which we will predict into future environmental conditions. \n---\n\n\n\n\n\n\nWe wrote this script drawing on some of the following resources:\n\n-Ecocommons Notebooks <https://www.ecocommons.org.au/notebooks/>\n\n-Damaris Zurell's SDM Intro <https://damariszurell.github.io/SDM-Intro/>\n\n<https://damariszurell.github.io/EEC-MGC/b4_SDM_eval.html>\n\n## Import packages\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(ggplot2)\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nterra 1.8.50\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(predicts)\nlibrary(blockCV)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nblockCV 3.1.5\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ecospat)\nlibrary(usdm)\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nrandomForest 4.7-1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'randomForest'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(precrec)\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.95 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\n# Install the mecofun package, used in the materials at https://damariszurell.github.io/SDM-Intro/\nlibrary(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: usethis\n```\n\n\n:::\n\n```{.r .cell-code}\ndevtools::install_git(\"https://gitup.uni-potsdam.de/macroecology/mecofun.git\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSkipping install of 'mecofun' from a xgit remote, the SHA1 (feb82c4a) has not changed since last install.\n  Use `force = TRUE` to force installation\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load the mecofun package\nlibrary(mecofun)\n```\n:::\n\n\n\n\n\n\n## Load koala presences and background points\n\nThey are loaded as spatvectors, but we also want them as dataframes for model input requirements.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_occ <- vect(\"Data/Biological_records/SEQ_koala_occurrences.shp\")\nbackground <- vect(\"Data/Biological_records/background_points_2.5k_random.shp\")\n\n# Make a dataframe of just x, y and presence\nkoala_occ_df <- koala_occ %>% \n  as.data.frame(geom = \"XY\") %>% \n  dplyr::select(x,y) %>% \n  mutate(Presence = 1)\n\nhead(koala_occ_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        x        y Presence\n1 1868673 -3265806        1\n2 1851054 -3232106        1\n3 1846917 -3231913        1\n4 1874167 -3262365        1\n5 1857487 -3259935        1\n6 1874262 -3262395        1\n```\n\n\n:::\n\n```{.r .cell-code}\nbackground_df <- background %>% \n  as.data.frame(geom = \"XY\") %>% \n  dplyr::select(x,y) %>% \n  mutate(Presence = 0)\n\nhead(background_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        x        y Presence\n1 1854692 -3111330        0\n2 1859816 -3111330        0\n3 1864940 -3111330        0\n4 1870064 -3111330        0\n5 1875188 -3111330        0\n6 1880312 -3111330        0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Combine to one\npr_bg <- rbind(koala_occ_df, background_df)\n```\n:::\n\n\n\n\n\n\n\n## Load environmental covariates\n\nLoading current covariate rasters. We formatted these rasters in the same way as the Koala data, so that they are all in the same projection and extent. We did this in the script: 'ICCB_Environmental_data.qmd'\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovs_current <- rast(\"Data/Environmental_variables/current_bioclim.tif\")\n\n\n# Define the BIOCLIM names for the raster layers\nlayer_names <- c(\n  \"BIO1_Annual_Mean_Temp\",\n  \"BIO2_Mean_Diurnal_Temp_Range\",\n  \"BIO3_Isothermality\",\n  \"BIO4_Temperature_Seasonality\",\n  \"BIO5_Max_Temp_Warmest_Month\",\n  \"BIO6_Min_Temp_Coldest_Month\",\n  \"BIO7_Temperature_Annual_Range\",\n  \"BIO8_Mean_Temp_Wettest_Quarter\",\n  \"BIO9_Mean_Temp_Driest_Quarter\",\n  \"BIO10_Mean_Temp_Warmest_Quarter\",\n  \"BIO11_Mean_Temp_Coldest_Quarter\",\n  \"BIO12_Annual_Precipitation\",\n  \"BIO13_Precip_Wettest_Month\",\n  \"BIO14_Precip_Driest_Month\",\n  \"BIO15_Precip_Seasonality\",\n  \"BIO16_Precip_Wettest_Quarter\",\n  \"BIO17_Precip_Driest_Quarter\",\n  \"BIO18_Precip_Warmest_Quarter\",\n  \"BIO19_Precip_Coldest_Quarter\")\n\nnames(covs_current) <- layer_names\n```\n:::\n\n\n\n\n\n\n## Covariate selection\n\n### Option 1. Narrow down potential covariates based on ecological knowledge\n\nFor this example, we had advice from CSIRO scientists who conducted an expert elicitation to gather a set of potential covariates that are likely to be important for koalas. We use this knowledge to filter out the key bioclim variables.\n\nWe select the following: Bio5 : Max temp of the warmest month (mainly for the northern populations) Bio6 : Min temp of the coldest month (mainly for southern populations, which essentially excludes alpine regions) Bio12 : Annual Precipitation Bio15 : Precipitation seasonality (coefficient of variation)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:nlyr(covs_current)) {\n  terra::plot(covs_current[[i]], main = names(covs_current)[[i]])\n}\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-4.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-8.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-9.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-10.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-11.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-12.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-13.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-14.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-15.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-16.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-17.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-18.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-4-19.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Show the four from expert elicitation the layers\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovs_current_expert <- subset(covs_current, names(covs_current) %in% c(\"BIO5_Max_Temp_Warmest_Month\", \n                                                                       \"BIO6_Min_Temp_Coldest_Month\", \n                                                                       \"BIO12_Annual_Precipitation\", \n                                                                       \"BIO15_Precip_Seasonality\"))\n\nfor(i in 1:nlyr(covs_current_expert)) {\n  terra::plot(covs_current_expert[[i]], main = names(covs_current_expert)[[i]])\n}\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-5-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-5-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-5-4.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Extract environmental covariate values from presence and background locations (training locations)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_PB_covs <- terra::extract(covs_current, pr_bg[,c(\"x\", \"y\")], xy = T)\ntrain_PB_covs <- cbind(train_PB_covs, pr_bg[\"Presence\"])\n\n# Remove rows where there's values missing from at least one covariate\nprint(paste0(\"RECORDS FROM \", nrow(train_PB_covs) - sum(complete.cases(train_PB_covs)), \" ROWS IN TRAINING DATA REMOVED DUE TO MISSING COVARIATE VALUES\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"RECORDS FROM 68 ROWS IN TRAINING DATA REMOVED DUE TO MISSING COVARIATE VALUES\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntrain_PB_covs <- train_PB_covs[complete.cases(train_PB_covs), ] \ntrain_PB_covs <- dplyr::select(train_PB_covs, -ID)\n\nhead(train_PB_covs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  BIO1_Annual_Mean_Temp BIO2_Mean_Diurnal_Temp_Range BIO3_Isothermality\n1              20.73219                     9.515615           46.85551\n2              20.85025                    10.291359           47.88751\n3              20.61474                    10.648253           48.39870\n4              21.00405                     9.129249           46.28033\n5              20.75752                    10.070734           47.49575\n6              21.00405                     9.129249           46.28033\n  BIO4_Temperature_Seasonality BIO5_Max_Temp_Warmest_Month\n1                     367.6388                    29.73501\n2                     379.8710                    30.47122\n3                     384.8382                    30.53297\n4                     363.1416                    29.72843\n5                     378.2968                    30.20078\n6                     363.1416                    29.72843\n  BIO6_Min_Temp_Coldest_Month BIO7_Temperature_Annual_Range\n1                    9.386996                      20.34801\n2                    8.940289                      21.53093\n3                    8.487451                      22.04552\n4                    9.958574                      19.76986\n5                    8.959633                      21.24114\n6                    9.958574                      19.76986\n  BIO8_Mean_Temp_Wettest_Quarter BIO9_Mean_Temp_Driest_Quarter\n1                       22.98827                      18.36451\n2                       23.55152                      18.09120\n3                       23.31077                      17.78633\n4                       23.01914                      18.89500\n5                       23.32381                      18.13480\n6                       23.01914                      18.89500\n  BIO10_Mean_Temp_Warmest_Quarter BIO11_Mean_Temp_Coldest_Quarter\n1                        24.94183                        15.92675\n2                        25.18869                        15.87509\n3                        24.99932                        15.57214\n4                        25.18043                        16.27002\n5                        25.08320                        15.80299\n6                        25.18043                        16.27002\n  BIO12_Annual_Precipitation BIO13_Precip_Wettest_Month\n1                   1238.362                   327.7901\n2                   1165.235                   327.1804\n3                   1161.138                   327.4446\n4                   1222.618                   311.3793\n5                   1109.354                   305.5583\n6                   1222.618                   311.3793\n  BIO14_Precip_Driest_Month BIO15_Precip_Seasonality\n1                 10.800349                 92.89355\n2                  8.330686                 98.80420\n3                  8.048150                 99.45329\n4                 11.913177                 88.93709\n5                  8.327950                 97.22968\n6                 11.913177                 88.93709\n  BIO16_Precip_Wettest_Quarter BIO17_Precip_Driest_Quarter\n1                     606.3058                    94.95189\n2                     598.7009                    77.30684\n3                     598.9535                    75.86132\n4                     583.3614                   100.51526\n5                     558.9021                    77.90620\n6                     583.3614                   100.51526\n  BIO18_Precip_Warmest_Quarter BIO19_Precip_Coldest_Quarter       x        y\n1                     449.8074                     189.9305 1870064 -3265048\n2                     444.0957                     147.6409 1849568 -3234305\n3                     445.4260                     145.7036 1844444 -3234305\n4                     448.1904                     200.5528 1875188 -3259924\n5                     408.9403                     153.3001 1859816 -3259924\n6                     448.1904                     200.5528 1875188 -3259924\n  Presence\n1        1\n2        1\n3        1\n4        1\n5        1\n6        1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Thin the koala presence points (for tutorial only)\n\nWe now thin the presences to reduce the number of points to a manageable size for plotting and modelling. This is not a recommended step for real data, but is done here to make the tutorial run faster and to make the plots clearer.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_PB_covs_pres <- train_PB_covs %>% filter(Presence == 1)\ntrain_PB_covs_bg <- train_PB_covs %>% filter(Presence == 0)\n\n# Thin the presences for plotting\ntrain_PB_covs_pres_thin <- train_PB_covs_pres[sample(nrow(train_PB_covs_pres), 10000), ]\n\n# Combine back into both presence and background\ntrain_PB_covs_thinned <- rbind(train_PB_covs_pres_thin, train_PB_covs_bg)\n```\n:::\n\n\n\n\n\n\n## Check correlation and multicollinearity of covariates\n\n### Correlation plot\n\nThere are several different methods for creating correlation plots.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\necospat.cor.plot(covs_current_expert)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Using the corplots package\n\nFor a simple and quick plot.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorplots <- ENMTools::raster.cor.plot(covs_current_expert)\ncorplots$cor.mds.plot\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\ncorplots$cor.heatmap\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-9-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nHere, we use the `corrplot` package to create a correlation plot of the selected covariates (this is taken from an EcoCommons Australia notebook).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select columns by their names\ncor_data <- train_PB_covs[, names(train_PB_covs) %in% c(\"BIO5_Max_Temp_Warmest_Month\", \n                                                        \"BIO6_Min_Temp_Coldest_Month\", \n                                                        \"BIO12_Annual_Precipitation\", \n                                                        \"BIO15_Precip_Seasonality\")]\n\n# Check the structure of the numeric data\nstr(cor_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t88136 obs. of  4 variables:\n $ BIO5_Max_Temp_Warmest_Month: num  29.7 30.5 30.5 29.7 30.2 ...\n $ BIO6_Min_Temp_Coldest_Month: num  9.39 8.94 8.49 9.96 8.96 ...\n $ BIO12_Annual_Precipitation : num  1238 1165 1161 1223 1109 ...\n $ BIO15_Precip_Seasonality   : num  92.9 98.8 99.5 88.9 97.2 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate the correlation matrix for the numeric columns\ncor_matrix <- cor(cor_data, use = \"complete.obs\", method = \"pearson\")\n\n\ncorrplot(cor_matrix,\n         method = \"color\",            # Use colored squares for correlation\n         type = \"upper\",              # Show upper triangle only\n         order = \"hclust\",            # Reorder variables hierarchically\n         addCoef.col = \"black\",       # Show correlation coefficients in black\n         number.cex = 0.5,            # Reduce the size of correlation labels\n         tl.col = \"black\",            # Text label color\n         tl.srt = 30,                 # Rotate labels slightly for readability\n         tl.cex = 0.5,                # Reduce text size of variable labels (set smaller valu)\n         cl.cex = 0.8,                # Reduce text size of color legend\n         diag = FALSE,                # Hide diagonal\n         col = colorRampPalette(c(\"#11aa96\", \"#61c6fa\", \"#f6aa70\"))(200),\n         sig.level = 0.01, insig = \"blank\")\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-10-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Variance Inflation Factor (VIF)\n\nIf you find corrplot is hard for you to make decisions, we can use Variance Inflation Factor (VIF). VIF is another statistical measure used to detect multicollinearity in a set of explanatory (independent) variables in a regression model.\n\n**Interpretation:**\n\n-   VIF = 1: No correlation\n-   VIF \\> 1 and \\<= 5: Moderate correlation; may not require corrective action.\n-   VIF \\> 5: Indicates high correlation. Multicollinearity may be problematic, and further investigation is recommended.\n-   VIF \\> 10: Strong multicollinearity. The variable is highly collinear with others, and steps should be taken to address this.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# usdm::vif(covs_current_expert) # just VIF for all covariates\nusdm::vifstep(covs_current_expert) # Variance Inflation Factor and test for multicollinearity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNo variable from the 4 input variables has collinearity problem. \n\nThe linear correlation coefficients ranges between: \nmin correlation ( BIO15_Precip_Seasonality ~ BIO6_Min_Temp_Coldest_Month ):  -0.2756697 \nmax correlation ( BIO12_Annual_Precipitation ~ BIO6_Min_Temp_Coldest_Month ):  0.8769718 \n\n---------- VIFs of the remained variables -------- \n                    Variables      VIF\n1 BIO5_Max_Temp_Warmest_Month 2.751370\n2 BIO6_Min_Temp_Coldest_Month 4.528719\n3  BIO12_Annual_Precipitation 6.888077\n4    BIO15_Precip_Seasonality 1.263385\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Exploration of the koala presence and background data\n\nIt is good practice to assess where in the environmental space the presence and background points are located. This can help to identify if there are any potential issues with the data, such as a lack of background points in certain areas of environmental space, and should show any patterns in the data that the model should pick up.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Iterate over all of the variables to create density plots of the background and presence data\nfor(i in 1:ncol(train_PB_covs_thinned)) {\n  \n  print(ggplot() +\n          geom_density(data = train_PB_covs_thinned, \n                       aes(x = .data[[names(train_PB_covs_thinned)[i]]], fill = as.factor(Presence)), \n                       alpha = 0.5) +\n    theme_bw() +\n    labs(title = names(train_PB_covs_thinned)[i]))\n  \n}\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-4.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-8.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-9.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-10.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-11.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-12.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-13.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-14.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-15.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-16.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-17.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-18.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-19.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-20.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-21.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-12-22.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n# First Model: GLM model fitting\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a folder to save outputs\ndir.create(\"outputs/GLM_outputs\", showWarnings = F)\n```\n:::\n\n\n\n\n\n\n## Null model\n\nNull model: no explanatory variables or predictors are included.\n\nIt is always helpful to create a null model as a benchmark to assess how the inclusion of explanatory variables improves the model.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a null model with only the intercept\nnull_model <- glm(Presence ~ 1,\n                  data = train_PB_covs,\n                  family = binomial(link = \"logit\"))\n\n# Check the model results\nsummary(null_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Presence ~ 1, family = binomial(link = \"logit\"), \n    data = train_PB_covs)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.08096    0.02636   154.8   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 14902  on 88135  degrees of freedom\nResidual deviance: 14902  on 88135  degrees of freedom\nAIC: 14904\n\nNumber of Fisher Scoring iterations: 7\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## GLM Model 1 - expert variables\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_model_1 <- glm(Presence ~ \n                     BIO5_Max_Temp_Warmest_Month + \n                     BIO6_Min_Temp_Coldest_Month + \n                     BIO12_Annual_Precipitation + \n                     BIO15_Precip_Seasonality,\n                   data=train_PB_covs_thinned,\n                   family = binomial(link = \"logit\"))\n\n# Check the model results\nsummary(glm_model_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Presence ~ BIO5_Max_Temp_Warmest_Month + BIO6_Min_Temp_Coldest_Month + \n    BIO12_Annual_Precipitation + BIO15_Precip_Seasonality, family = binomial(link = \"logit\"), \n    data = train_PB_covs_thinned)\n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                 -6.651059   1.562034  -4.258 2.06e-05 ***\nBIO5_Max_Temp_Warmest_Month -0.596618   0.051512 -11.582  < 2e-16 ***\nBIO6_Min_Temp_Coldest_Month  0.880896   0.028613  30.786  < 2e-16 ***\nBIO12_Annual_Precipitation  -0.002949   0.000275 -10.724  < 2e-16 ***\nBIO15_Precip_Seasonality     0.247330   0.010880  22.733  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 8758.5  on 11463  degrees of freedom\nResidual deviance: 5710.0  on 11459  degrees of freedom\nAIC: 5720\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n\n```{.r .cell-code}\n# These response curves don't look very helpful\ndismo::response(glm_model_1)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-15-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## GLM Model 2 - expert variables with quadratics\n\nIn this model, we include quadratic terms for the covariates. This is a common approach in species distribution modelling to account for non-linear relationships between the predictors and the response variable. This increases the complexity of the model and allows for more flexibility in fitting the data.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_model_2 <- glm(Presence ~ \n                     BIO5_Max_Temp_Warmest_Month + I(BIO5_Max_Temp_Warmest_Month^2) + \n                     BIO6_Min_Temp_Coldest_Month + I(BIO6_Min_Temp_Coldest_Month^2) + \n                     BIO12_Annual_Precipitation + I(BIO12_Annual_Precipitation^2) + \n                     BIO15_Precip_Seasonality + I(BIO15_Precip_Seasonality^2), \n                   data=train_PB_covs_thinned,\n                   family = binomial(link = \"logit\"))\n\n# Check the model results\nsummary(glm_model_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Presence ~ BIO5_Max_Temp_Warmest_Month + I(BIO5_Max_Temp_Warmest_Month^2) + \n    BIO6_Min_Temp_Coldest_Month + I(BIO6_Min_Temp_Coldest_Month^2) + \n    BIO12_Annual_Precipitation + I(BIO12_Annual_Precipitation^2) + \n    BIO15_Precip_Seasonality + I(BIO15_Precip_Seasonality^2), \n    family = binomial(link = \"logit\"), data = train_PB_covs_thinned)\n\nCoefficients:\n                                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                      -8.396e+01  1.828e+01  -4.593 4.37e-06 ***\nBIO5_Max_Temp_Warmest_Month      -1.334e+00  1.180e+00  -1.130   0.2585    \nI(BIO5_Max_Temp_Warmest_Month^2)  1.292e-02  1.910e-02   0.676   0.4988    \nBIO6_Min_Temp_Coldest_Month      -1.096e+00  1.914e-01  -5.728 1.02e-08 ***\nI(BIO6_Min_Temp_Coldest_Month^2)  1.456e-01  1.293e-02  11.260  < 2e-16 ***\nBIO12_Annual_Precipitation        7.378e-04  1.941e-03   0.380   0.7039    \nI(BIO12_Annual_Precipitation^2)  -1.266e-06  6.923e-07  -1.828   0.0675 .  \nBIO15_Precip_Seasonality          2.084e+00  2.380e-01   8.758  < 2e-16 ***\nI(BIO15_Precip_Seasonality^2)    -9.202e-03  1.269e-03  -7.253 4.09e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 8758.5  on 11463  degrees of freedom\nResidual deviance: 5546.0  on 11455  degrees of freedom\nAIC: 5564\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n\n```{.r .cell-code}\n# These response curves don't look very helpful\ndismo::response(glm_model_2)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Model effect evaluation\n\nHere we use a function presented in an EcoCommons Australia notebook to evaluate the model performance. The notebook can be found on their GitHub: https://github.com/EcoCommonsAustralia/notebooks/tree/main/notebooks.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to plot effect size graph\nplot_effect_size <- function(glm_model) {\n  # Check if required libraries are installed\n  if (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n    stop(\"Please install the 'ggplot2' package to use this function.\")\n  }\n  library(ggplot2)\n\n  # Extract effect sizes (coefficients) from the model\n  coefs <- summary(glm_model)$coefficients\n  effect_sizes <- data.frame(\n    Variable = rownames(coefs)[-1],  # Exclude the intercept\n    Effect_Size = coefs[-1, \"Estimate\"],\n    Std_Error = coefs[-1, \"Std. Error\"]\n  )\n\n  # Sort by effect size\n  effect_sizes <- effect_sizes[order(-abs(effect_sizes$Effect_Size)), ]\n\n  # Plot the effect sizes with error bars\n  ggplot(effect_sizes, aes(x = reorder(Variable, Effect_Size), y = Effect_Size)) +\n    geom_bar(stat = \"identity\", fill = \"#11aa96\") +\n    geom_errorbar(aes(ymin = Effect_Size - Std_Error, ymax = Effect_Size + Std_Error), width = 0.2) +\n    coord_flip() +\n    labs(\n      title = \"Effect Sizes of Variables\",\n      x = \"Variable\",\n      y = \"Effect Size (Coefficient Estimate)\"\n    ) +\n    theme_minimal()\n}\n```\n:::\n\n\n\n\n\n\n## Use the function to check the effect sizes\n\nWe need to be careful when interpreting the effect sizes of models with quadratic terms however, as the response curve depends on the linear and the quadratic term.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example usage of effect size plot\nplot_effect_size(glm_model_1)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-18-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplot_effect_size(glm_model_2)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-18-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Response curves\n\nAgain, we can use a function from the EcoCommons notebook to plot the response curves from the model, although for quadratics we need to adjust the function or use something else.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_species_response <- function(glm_model, predictors, data) {\n  # Check if required libraries are installed\n  if (!requireNamespace(\"ggplot2\", quietly = TRUE) || !requireNamespace(\"gridExtra\", quietly = TRUE)) {\n    stop(\"Please install the 'ggplot2' and 'gridExtra' packages to use this function.\")\n  }\n  library(ggplot2)\n  library(gridExtra)\n\n  # Create empty list to store response plots\n  response_plots <- list()\n\n  # Loop through each predictor variable\n  for (predictor in predictors) {\n    # Create new data frame to vary predictor while keeping others constant\n    pred_range <- seq(\n      min(data[[predictor]], na.rm = TRUE),\n      max(data[[predictor]], na.rm = TRUE),\n      length.out = 100\n    )\n    const_data <- data[1, , drop = FALSE]  # Use first row to keep other predictors constant\n    response_data <- const_data[rep(1, 100), ]  # Duplicate the row\n    response_data[[predictor]] <- pred_range\n\n    # Predict probabilities\n    predicted_response <- predict(glm_model, newdata = response_data, type = \"response\")\n\n    # Create data frame for plotting\n    plot_data <- data.frame(\n      Predictor_Value = pred_range,\n      Predicted_Probability = predicted_response\n    )\n\n    # Add presence and absence data\n    presence_absence_data <- data.frame(\n      Predictor_Value = data[[predictor]],\n      Presence_Absence = data$Presence\n    )\n\n    # Generate the response plot\n    p <- ggplot() +\n      \n      geom_line(data = plot_data, \n                aes(x = Predictor_Value, y = Predicted_Probability), \n                color = \"#61c6fa\", linewidth = 1) +\n      \n      geom_point(data = presence_absence_data[presence_absence_data$Presence_Absence == 1, ], \n                 aes(x = Predictor_Value, y = Presence_Absence), \n                 color = \"#11aa96\", alpha = 0.6) +\n      \n      geom_point(data = presence_absence_data[presence_absence_data$Presence_Absence == 0, ], \n                 aes(x = Predictor_Value, y = Presence_Absence), \n                 color = \"#f6aa70\", alpha = 0.6) +\n      \n      labs(x = predictor, y = NULL) +\n      theme_minimal() +\n      theme(axis.title.y = element_blank())\n\n    # Store the plot in the list\n    response_plots[[predictor]] <- p\n  }\n\n  # Arrange all plots in one combined plot with a single shared y-axis label\n  grid.arrange(\n    grobs = response_plots,\n    ncol = 3,\n    left = \"Predicted Probability / Presence-Absence\"\n  )\n}\n```\n:::\n\n\n\n\n\n\n## Use the response curve function\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredictors <- c(\"BIO5_Max_Temp_Warmest_Month\", \n                \"BIO6_Min_Temp_Coldest_Month\", \n                \"BIO12_Annual_Precipitation\", \n                \"BIO15_Precip_Seasonality\")\n\nplot_species_response(glm_model_1, predictors, train_PB_covs_thinned)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:randomForest':\n\n    combine\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-20-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Model 1 partial responses\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the partial responses\npartial_response(glm_model_1, predictors = train_PB_covs_thinned[,predictors], main='GLM')\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-4.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Plot inflated response curves:\ninflated_response(glm_model_1, predictors = train_PB_covs_thinned[,predictors], method = \"stat3\", lwd = 3, main='GLM') \n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-21-8.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Model 2 partial responses\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the partial responses\npartial_response(glm_model_2, predictors = train_PB_covs_thinned[,predictors], main='GLM')\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-4.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Plot inflated response curves:\ninflated_response(glm_model_2, predictors = train_PB_covs_thinned[,predictors], method = \"stat3\", lwd = 3, main='GLM') \n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-22-8.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## GLM predictions to current environment\n\n### Model 1\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_model_1 <- predicts::predict(covs_current_expert, glm_model_1, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_model_1,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - GLM 1\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Model 2\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_model_2 <- predicts::predict(covs_current_expert, glm_model_2, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_model_2,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - GLM 2\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n# Random forest\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a folder to save outputs\n\ndir.create(\"outputs/RF_outputs\", showWarnings = F)\n```\n:::\n\n\n\n\n\n\n## Data preparation\n\n<!-- ### OPTIONAL: Normalise the covariates -->\n\n<!-- ```{r} -->\n\n<!-- # Scale the covariates -->\n<!-- train_PB_covs_thinned_scaled <- scale(train_PB_covs_thinned[, layer_names], center = T, scale = T)  -->\n\n<!-- # Combine with the rest of the dataframe -->\n<!-- train_PB_covs_scaled <- data.frame(train_PB_covs_thinned[, c(\"x\", \"y\", \"Presence\")], -->\n<!--                                    train_PB_covs_thinned_scaled) -->\n\n<!-- head(train_PB_covs_scaled) -->\n\n<!-- ``` -->\n\n### Calculate the case weights (down/up-weighting)\n\nBecause we have a 'class imbalance' (uneven number of presences and background points), we are making their 'weight' in the model equal.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npresNum <- as.numeric(table(train_PB_covs_thinned$Presence)[\"1\"]) # number of presences\nbgNum <- as.numeric(table(train_PB_covs_thinned$Presence)[\"0\"]) # number of backgrounds\nweight <- ifelse(train_PB_covs_thinned$Presence == 1, 1, presNum / bgNum) # down-weighting\n```\n:::\n\n\n\n\n\n\n### Prepare for fitting the RF model(s)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# If wanting to fit a classification model\n# Convert the response to factor for producing class relative likelihood\ntrain_PB_covs_thinned$Presence_Factor <- as.factor(train_PB_covs_thinned$Presence)\n\n# For down-sampling, the number of background (0s) in each bootstrap sample should the same as presences\n# (1s). For this, we use sampsize argument to do this.\n# We need to choose the SMALLER number out of the two classes\nsample_size <- c(\"0\" = bgNum, \"1\" = bgNum)\nsample_size <- c(bgNum)\n```\n:::\n\n\n\n\n\n\n## Random Forest Model - expert covariates\n\n### Classification or regression model?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# # Specify the model formula - classification\n# model_formula <- as.formula(Presence_Factor ~ \n#                               BIO5_Max_Temp_Warmest_Month + \n#                               BIO6_Min_Temp_Coldest_Month + \n#                               BIO12_Annual_Precipitation + \n#                               BIO15_Precip_Seasonality)\n\n# Specify the model formula - regression\nmodel_formula <- as.formula(Presence ~ \n                              BIO5_Max_Temp_Warmest_Month + \n                              BIO6_Min_Temp_Coldest_Month + \n                              BIO12_Annual_Precipitation + \n                              BIO15_Precip_Seasonality)\n```\n:::\n\n\n\n\n\n\n### Fit the random forest model\n\nThis will throw a warning as we only have two unique values (0s and 1s), but in our case that is fine, and you can ignore the warning.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_1 <- randomForest::randomForest(formula = model_formula,\n                                   data = train_PB_covs_thinned,\n                                   weights = weight,\n                                   ntree = 1000,\n                                   sampsize = sample_size,\n                                   replace = T, \n                                   importance=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Check the model results\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model summary\nrf_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\n randomForest(formula = model_formula, data = train_PB_covs_thinned,      weights = weight, ntree = 1000, sampsize = sample_size, replace = T,      importance = TRUE) \n               Type of random forest: regression\n                     Number of trees: 1000\nNo. of variables tried at each split: 1\n\n          Mean of squared residuals: 0.08568366\n                    % Var explained: 23.08\n```\n\n\n:::\n\n```{.r .cell-code}\n# Variable importance:\nimportance(rf_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              %IncMSE IncNodePurity\nBIO5_Max_Temp_Warmest_Month  90.23977      69.47576\nBIO6_Min_Temp_Coldest_Month 113.13609     102.85306\nBIO12_Annual_Precipitation   77.54665      82.91868\nBIO15_Precip_Seasonality     75.15556      47.28076\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot variable importance\nvarImpPlot(rf_1, type = 1)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-30-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Look at single trees:\nhead(getTree(rf_1,1,T))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  left daughter right daughter                   split var split point status\n1             2              3 BIO6_Min_Temp_Coldest_Month    8.319836     -3\n2             4              5    BIO15_Precip_Seasonality   96.030197     -3\n3             6              7 BIO6_Min_Temp_Coldest_Month    9.960938     -3\n4             8              9 BIO6_Min_Temp_Coldest_Month    6.763289     -3\n5            10             11  BIO12_Annual_Precipitation 1342.408508     -3\n6            12             13 BIO6_Min_Temp_Coldest_Month    8.922107     -3\n  prediction\n1  0.4965847\n2  0.1905405\n3  0.8093923\n4  0.1025057\n5  0.3189369\n6  0.8502269\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Partial dependence plots\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Now, we plot response curves in the same way as we did for GLMs above:\npartial_response(rf_1, predictors = train_PB_covs_thinned[,predictors], main='Random Forest')\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-4.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Plot inflated response curves:\ninflated_response(rf_1, predictors = train_PB_covs_thinned[,predictors], method = \"stat3\", lwd = 3, main='Random Forest') \n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-31-8.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### Random Forest predictions\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_RF_1 <- predicts::predict(covs_current_expert, rf_1, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_RF_1,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - RF 1\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-32-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nwriteRaster(predicted_raster_RF_1, \n            filename = \"outputs/current_distribution_RF_1.tif\", \n            overwrite = TRUE)\n```\n:::\n\n\n\n\n\n\n\n# Model evaluation with spatial block cross-validation\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert training data to sf\ntrain_PB_covs_thinned_sf <- st_as_sf(train_PB_covs_thinned[, c(\"x\", \"y\", \"Presence\")], coords = c(\"x\", \"y\"), crs = \"EPSG:3112\")\n\n# Generate spatial blocks\nspblock <- cv_spatial(x = train_PB_covs_thinned_sf, \n                      column = \"Presence\",\n                      r = NULL,\n                      size = 50000, # Size of the blocks in metres\n                      k = 5,\n                      hexagon = TRUE,\n                      selection = \"random\",\n                      iteration = 100, # to find evenly-dispersed folds\n                      biomod2 = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n  train_0 train_1 test_0 test_1\n1    1206    8207    258   1793\n2    1129    9274    335    726\n3    1176    8653    288   1347\n4    1202    5192    262   4808\n5    1143    8674    321   1326\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-33-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\ncv_plot(cv = spblock,\n        x = train_PB_covs_thinned_sf,\n        points_alpha = 0.5,\n        nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-33-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Extract the folds to save \nspfolds <- spblock$folds_list\n\n# We now have a list of 5 folds, where the first object is the training data, and the second is the testing data\nstr(spfolds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ :List of 2\n  ..$ : int [1:9413] 10859 10860 10965 11019 11020 10706 10656 10707 10657 11021 ...\n  ..$ : int [1:2051] 11421 11423 11382 6511 11442 11422 11402 11381 11401 10738 ...\n $ :List of 2\n  ..$ : int [1:10403] 11022 11264 11223 11265 11263 11074 4920 11075 11180 11224 ...\n  ..$ : int [1:1061] 10859 10860 10965 11019 11020 10706 10656 10707 10657 11021 ...\n $ :List of 2\n  ..$ : int [1:9829] 10859 10860 10965 11019 11020 10706 10656 10707 10657 11021 ...\n  ..$ : int [1:1635] 11022 11264 11223 11265 11263 11074 4920 11075 11180 11224 ...\n $ :List of 2\n  ..$ : int [1:6394] 10859 10860 10965 11019 11020 10706 10656 10707 10657 11021 ...\n  ..$ : int [1:5070] 10982 11140 3731 9771 3978 5636 294 10774 10981 3251 ...\n $ :List of 2\n  ..$ : int [1:9817] 10859 10860 10965 11019 11020 10706 10656 10707 10657 11021 ...\n  ..$ : int [1:1647] 11230 11271 11229 11231 11270 11137 11269 11233 11136 11228 ...\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Run the model for every fold and evaluate\n\n### Model evaluation - metrics\n\nTypically, it helps to evaluate your model with several metrics that describe different features of model performance and prediction. Here, we define a function to feed in a model prediction and calculate several evaluation metrics.\n\nThe metrics are:\n\n-Area under the receiver operating characteristic curve (AUC ROC)\n\nHigher values of this (closer to 1) suggest a model is good at distinguishing presence points from the background.\n\n-Continuous boyce index\n\nHigher values of this (closer to 1) suggest a model is good at predicting higher suitability at spots where there were presences.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Start a dataframe to save results\neval_df <- data.frame(fold = numeric(),\n                      ROC = numeric(),\n                      boyce = numeric())\n\nfor(f in seq_along(spfolds)) {\n  \n  # Subset the training and testing data (spatial cross validation) (for the fth fold)\n  \n  train_PB_covs_scv <- train_PB_covs_thinned[spfolds[[f]][[1]], ]\n  test_PB_covs_scv <- train_PB_covs_thinned[spfolds[[f]][[2]], ]\n  \n  glm_model_1 <- glm(Presence ~ \n                     BIO5_Max_Temp_Warmest_Month + \n                     BIO6_Min_Temp_Coldest_Month + \n                     BIO12_Annual_Precipitation + \n                     BIO15_Precip_Seasonality,\n                   data=train_PB_covs_scv,\n                   family = binomial(link = \"logit\"))\n  \n    # Predict to the testing data of fold f\n  test_PB_covs_scv$pred <- predict(glm_model_1, newdata = test_PB_covs_scv, type = \"response\")\n\n  # Evaluate prediction on test set\n  ROC = precrec::auc(precrec::evalmod(scores = test_PB_covs_scv$pred, labels = test_PB_covs_scv$Presence))[1,4]\n \n  boyce = ecospat::ecospat.boyce(fit = test_PB_covs_scv$pred, \n                                 obs = test_PB_covs_scv$pred[which(test_PB_covs_scv$Presence==1)], \n                                 nclass = 0, # Calculate continuous index\n                                 method = \"pearson\",\n                                 PEplot = F)[[\"cor\"]]\n  \n  # Add results to dataframe\n  eval_df <- eval_df %>% add_row(fold = f, ROC = ROC, boyce = boyce)\n\n  \n}\n```\n:::\n\n\n\n\n\n\n### Summarise the evaluation metrics\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mean AUC & boyce\neval_df %>% \n  summarise(mean_AUC = mean(ROC),\n            mean_boyce = mean(boyce),\n            sd_AUC = sd(ROC),\n            sd_boyce = sd(boyce))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   mean_AUC mean_boyce     sd_AUC  sd_boyce\n1 0.8470138     0.7584 0.08467198 0.1327057\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Model evaluation for Random Forest with spatial block cross-validation\n\nWe're going to use the same spatial folds as before.\n\n\n## Run the RF model for every fold and evaluate\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Start a dataframe to save results\neval_df.RF <- data.frame(fold = numeric(),\n                      ROC = numeric(),\n                      boyce = numeric())\n\nfor(f in seq_along(spfolds)) {\n  \n  # Subset the training and testing data (spatial cross validation) (for the fth fold)\n  \n  train_PB_covs_scv <- train_PB_covs_thinned[spfolds[[f]][[1]], ]\n  test_PB_covs_scv <- train_PB_covs_thinned[spfolds[[f]][[2]], ]\n  \n  presNum <- as.numeric(table(train_PB_covs_scv$Presence)[\"1\"]) # number of presences\n  bgNum <- as.numeric(table(train_PB_covs_scv$Presence)[\"0\"]) # number of backgrounds\n  weight <- ifelse(train_PB_covs_scv$Presence == 1, 1, presNum / bgNum) # down-weighting\n  \n  sample_size <- c(\"0\" = bgNum, \"1\" = bgNum)\n  sample_size <- c(bgNum)\n\n  \n  rf_1 <- randomForest::randomForest(formula = model_formula,\n                                   data = train_PB_covs_scv,\n                                   weights = weight,\n                                   ntree = 1000,\n                                   sampsize = sample_size,\n                                   replace = T, \n                                   importance=TRUE)\n  \n  \n    # Predict to the testing data of fold f\n  test_PB_covs_scv$pred <- predict(rf_1, newdata = test_PB_covs_scv, type = \"response\")\n\n  # Evaluate prediction on test set\n  ROC = precrec::auc(precrec::evalmod(scores = test_PB_covs_scv$pred, labels = test_PB_covs_scv$Presence))[1,4]\n \n  boyce = ecospat::ecospat.boyce(fit = test_PB_covs_scv$pred, \n                                 obs = test_PB_covs_scv$pred[which(test_PB_covs_scv$Presence==1)], \n                                 nclass = 0, # Calculate continuous index\n                                 method = \"pearson\",\n                                 PEplot = F)[[\"cor\"]]\n  \n  # Add results to dataframe\n  eval_df.RF <- eval_df.RF %>% add_row(fold = f, ROC = ROC, boyce = boyce)\n\n  \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Summarise the evaluation metrics\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mean AUC & boyce\neval_df.RF %>% \n  summarise(mean_AUC = mean(ROC),\n            mean_boyce = mean(boyce),\n            sd_AUC = sd(ROC),\n            sd_boyce = sd(boyce))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   mean_AUC mean_boyce     sd_AUC  sd_boyce\n1 0.8121285       0.64 0.08989678 0.2091853\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Make predictions to future climates\n\n## Load future environmental data\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovs_future <- rast(\"Data/Environmental_variables/future_bioclim.2090.SSP370.tif\")\nnames(covs_future) <- layer_names\ncovs_future\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 47, 55, 19  (nrow, ncol, nlyr)\nresolution  : 5123.954, 5123.954  (x, y)\nextent      : 1621552, 1903370, -3349594, -3108768  (xmin, xmax, ymin, ymax)\ncoord. ref. : GDA94 / Geoscience Australia Lambert (EPSG:3112) \nsource      : future_bioclim.2090.SSP370.tif \nnames       : BIO1_~_Temp, BIO2_~Range, BIO3_~ality, BIO4_~ality, BIO5_~Month, BIO6_~Month, ... \nmin values  :   0.8177757,   0.3121004,    1.564732,    12.43535,    1.130271,   0.4521889, ... \nmax values  :  24.5521488,  14.5486765,   50.989292,   528.63293,   37.389927,  15.7586107, ... \n```\n\n\n:::\n\n```{.r .cell-code}\ncovs_future <- terra::mask(covs_future, covs_current) # Crop to SEQ extent\n\ncovs_future_expert <- subset(covs_future, names(covs_future) %in% c(\"BIO5_Max_Temp_Warmest_Month\", \n                                                                    \"BIO6_Min_Temp_Coldest_Month\", \n                                                                    \"BIO12_Annual_Precipitation\", \n                                                                    \"BIO15_Precip_Seasonality\"))\n```\n:::\n\n\n\n\n\n\n## Plot the future rasters\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:nlyr(covs_future)) {\n  terra::plot(covs_future[[i]], main = names(covs_future)[[i]])\n}\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-3.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-4.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-5.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-6.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-7.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-8.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-9.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-10.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-11.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-12.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-13.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-14.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-15.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-16.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-17.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-18.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-19.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Plot to compare the difference between the current and future rasters\n\nplot(covs_future_expert - covs_current_expert)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-39-20.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Test the environmental distance between current data and future conditions\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmess <- predicts::mess(covs_future_expert, \n                       train_PB_covs_thinned[, c(\"BIO5_Max_Temp_Warmest_Month\", \n                                            \"BIO6_Min_Temp_Coldest_Month\", \n                                            \"BIO12_Annual_Precipitation\", \n                                            \"BIO15_Precip_Seasonality\")])\n\nplot(mess, axes = F)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-40-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nr_mess_mask <- mess < 0\nplot(r_mess_mask, axes=F)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-40-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nTest which areas you might mask out because they are 'novel' in environmental space and therefore require model extrapolation.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanalog_fut <- predicted_raster_model_1\n\nvalues(analog_fut)[values(mess)<0] <- NA\n\nplot(analog_fut, \n     range = c(0, 1),  # Set min and max values for the color scale\n     main = \"Koala relative occurrence in regions with analogue conditions\")\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-41-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nnovel_fut <- predicted_raster_model_1\n\nvalues(novel_fut)[values(mess)>0] <- NA\n\nplot(novel_fut, \n     range = c(0, 1),  # Set min and max values for the color scale\n     main = \"Koala relative occurrence in regions with novel conditions\")\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-41-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n# GLM future predictions\n\n## Model 1\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_model_1 <- predict(covs_future_expert, glm_model_1, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_model_1,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - GLM1\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-42-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Model 2\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_model_2 <- predict(covs_future_expert, glm_model_2, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_model_2,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - GLM2\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-43-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Random Forest future predictions\n\n### Model 1\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_RF_1 <- predicts::predict(covs_future_expert, rf_1, type = \"response\", na.rm=TRUE)\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_RF_1,\n  range = c(0, 1),  # Set min and max values for the color scale\n  main = \"Relative Probability of Occurrence of Koalas in SEQ - RF\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-44-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Presenting predictions with uncertainty\n\nThere are many sources of model uncertainty that should be explored and ideally, presented alongside model predictions. \n\nOne that we'll focus on here is climate scenario uncertainty. We do so by fitting a second model to future climate data from a lower emission shared socioeconomic path scenario (SSP 1.26).\n\n\n## Load future environmental data (SSP 1.26)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovs_future_SSP126 <- rast(\"Data/Environmental_variables/future_bioclim.2090.SSP126.tif\")\nnames(covs_future_SSP126) <- layer_names\ncovs_future_SSP126\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 47, 55, 19  (nrow, ncol, nlyr)\nresolution  : 5123.954, 5123.954  (x, y)\nextent      : 1621552, 1903370, -3349594, -3108768  (xmin, xmax, ymin, ymax)\ncoord. ref. : GDA94 / Geoscience Australia Lambert (EPSG:3112) \nsource      : future_bioclim.2090.SSP126.tif \nnames       : BIO1_~_Temp, BIO2_~Range, BIO3_~ality, BIO4_~ality, BIO5_~Month, BIO6_~Month, ... \nmin values  :   0.7471204,   0.3128485,    1.585051,    12.19436,    1.046093,   0.3754203, ... \nmax values  :  22.4384842,  14.8543510,   51.254021,   544.83429,   35.546104,  13.5217409, ... \n```\n\n\n:::\n\n```{.r .cell-code}\ncovs_future_SSP126_expert <- subset(covs_future_SSP126, names(covs_future_SSP126) %in% c(\"BIO5_Max_Temp_Warmest_Month\", \n                                                                                          \"BIO6_Min_Temp_Coldest_Month\", \n                                                                                          \"BIO12_Annual_Precipitation\", \n                                                                                          \"BIO15_Precip_Seasonality\"))\n```\n:::\n\n\n\n\n\n\nPlot to compare the variables across the two scenarios\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(covs_future_expert)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-46-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplot(covs_future_SSP126_expert)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-46-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## GLM future predictions (SSP 1.26)\n\n### Model 1\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the presence probability across the entire raster extent\npredicted_raster_model_1_SSP126 <- predict(covs_future_SSP126_expert, glm_model_1, type = \"response\")\n\n# Plot the species distribution raster\nplot(\n  predicted_raster_model_1,\n  range = c(0,1),\n  main = \"SSP 3.70\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-47-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplot(\n  predicted_raster_model_1_SSP126,\n  range = c(0,1),\n  main = \"SSP 1.26\"\n)\n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-47-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Model uncertainty\n\nAnother element of uncertainty that can be represented is model uncertainty, or the standard error around the coefficient estimates.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract standard errors of coefficients\n\ncoef_se <- summary(glm_model_1)$coefficients[, \"Std. Error\"]\n\nprint(coef_se)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                (Intercept) BIO5_Max_Temp_Warmest_Month \n               1.7073577601                0.0565765829 \nBIO6_Min_Temp_Coldest_Month  BIO12_Annual_Precipitation \n               0.0320840066                0.0003021583 \n   BIO15_Precip_Seasonality \n               0.0118936628 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncovs_df <- as.data.frame(covs_future_expert, na.rm = FALSE)\n\npred_link <- predict(glm_model_1, newdata = covs_df, type = \"link\", se.fit = TRUE)\n\n# Linear predictor (eta)\neta <- pred_link$fit\nse_eta <- pred_link$se.fit\n\n# Confidence intervals (95%)\nz <- 1.96\neta_lower <- eta - z * se_eta\neta_upper <- eta + z * se_eta\n\n# Transform back to response scale\nlinkinv <- glm_model_1$family$linkinv\npredicted <- linkinv(eta)\nlower_ci <- linkinv(eta_lower)\nupper_ci <- linkinv(eta_upper)\n\n\n# Add to covs_df\ncovs_df$predicted <- predicted\ncovs_df$lower_ci <- lower_ci\ncovs_df$upper_ci <- upper_ci\n\n\npredicted_r <- setValues(rast(covs_future_expert, nlyr = 1), predicted)\nlower_ci_r <- setValues(rast(covs_future_expert, nlyr = 1), lower_ci)\nupper_ci_r <- setValues(rast(covs_future_expert, nlyr = 1), upper_ci)\n\n# Step 2: Name the layers\nnames(predicted_r) <- \"predicted\"\nnames(lower_ci_r) <- \"lower_CI\"\nnames(upper_ci_r) <- \"upper_CI\"\n\nprediction_w_uncertainty <- c(predicted_r, lower_ci_r, upper_ci_r)\n\nplot(prediction_w_uncertainty, range = c(0, 1))  \n```\n\n::: {.cell-output-display}\n![](ICCB_Modelling_and_validation_files/figure-pdf/unnamed-chunk-49-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "ICCB_Modelling_and_validation_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}